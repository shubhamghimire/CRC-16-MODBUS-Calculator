#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Jan 25, 2021 01:28:23 PM JST  platform: Windows NT

import sys


try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import CRC_support


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()

    CRC_support.set_Tk_var()

    top = Toplevel1(root)
    CRC_support.init(root, top)
    root.mainloop()


w = None


def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel(root)
    top = Toplevel1(w)
    CRC_support.init(w, top, *args, **kwargs)
    return (w, top)


def destroy_Toplevel1():
    global w
    w.destroy()
    w = None


class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9'  # X11 color: 'gray85'
        _ana1color = '#d9d9d9'  # X11 color: 'gray85'
        _ana2color = '#ececec'  # Closest X11 color: 'gray92'
        font13 = "-family {Segoe UI} -size 28 -weight bold -slant "  \
            "roman -underline 0 -overstrike 0"
        font17 = "-family {ＭＳ ゴシック} -size 16 -weight bold -slant roman"  \
            " -underline 0 -overstrike 0"
        font18 = "-family {Segoe UI} -size 11 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"
        font19 = "-family {Segoe UI} -size 12 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.', background=_bgcolor)
        self.style.configure('.', foreground=_fgcolor)
        self.style.configure('.', font="TkDefaultFont")
        self.style.map('.', background=[
                       ('selected', _compcolor), ('active', _ana2color)])

        top.geometry("421x450+546+146")
        top.minsize(120, 1)
        top.maxsize(1924, 1061)
        top.resizable(1, 1)
        top.title("CRC-16/MODBUS Calculator")
        top.configure(background="#d9d9d9")

        self.Entry_Area_Frame = tk.LabelFrame(top)
        self.Entry_Area_Frame.place(
            relx=0.024, rely=0.022, relheight=0.433, relwidth=0.95)
        self.Entry_Area_Frame.configure(relief='groove')
        self.Entry_Area_Frame.configure(foreground="black")
        self.Entry_Area_Frame.configure(text='''Entry Area''')
        self.Entry_Area_Frame.configure(background="#d9d9d9")

        self.Value_Enter_Entrybox = tk.Entry(
            self.Entry_Area_Frame, textvariable=CRC_support.CRC_entry_label)
        self.Value_Enter_Entrybox.place(
            relx=0.175, rely=0.41, height=37, relwidth=0.635, bordermode='ignore')
        self.Value_Enter_Entrybox.configure(background="white")
        self.Value_Enter_Entrybox.configure(disabledforeground="#a3a3a3")
        self.Value_Enter_Entrybox.configure(font=font17)
        self.Value_Enter_Entrybox.configure(foreground="#000000")
        self.Value_Enter_Entrybox.configure(highlightcolor="#27a067")
        self.Value_Enter_Entrybox.configure(insertbackground="black")

        self.Enter_Values_Label = tk.Label(self.Entry_Area_Frame)
        self.Enter_Values_Label.place(
            relx=0.25, rely=0.154, height=41, width=164, bordermode='ignore')
        self.Enter_Values_Label.configure(activeforeground="#000000")
        self.Enter_Values_Label.configure(background="#d9d9d9")
        self.Enter_Values_Label.configure(disabledforeground="#a3a3a3")
        self.Enter_Values_Label.configure(font=font18)
        self.Enter_Values_Label.configure(foreground="#000000")
        self.Enter_Values_Label.configure(text='''Enter Values in ASCII''')

        self.Submit_Button = tk.Button(self.Entry_Area_Frame)
        self.Submit_Button.place(
            relx=0.388, rely=0.728, height=34, width=67, bordermode='ignore')
        self.Submit_Button.configure(activebackground="#ececec")
        self.Submit_Button.configure(activeforeground="#000000")
        self.Submit_Button.configure(background="#d9d9d9")
        self.Submit_Button.configure(disabledforeground="#a3a3a3")
        self.Submit_Button.configure(foreground="#000000")
        self.Submit_Button.configure(highlightbackground="#d9d9d9")
        self.Submit_Button.configure(highlightcolor="black")
        self.Submit_Button.configure(pady="0")
        self.Submit_Button.configure(
            text='''Calculate''', command=CRC_support.display_CRC)

        self.Result_Area_Frame = tk.LabelFrame(top)
        self.Result_Area_Frame.place(
            relx=0.024, rely=0.467, relheight=0.5, relwidth=0.95)
        self.Result_Area_Frame.configure(relief='groove')
        self.Result_Area_Frame.configure(foreground="black")
        self.Result_Area_Frame.configure(text='''Result Area''')
        self.Result_Area_Frame.configure(background="#d9d9d9")

        self.Calculated_CRC_Label = tk.Label(self.Result_Area_Frame)
        self.Calculated_CRC_Label.place(
            relx=0.203, rely=0.2, height=31, width=224, bordermode='ignore')
        self.Calculated_CRC_Label.configure(background="#d9d9d9")
        self.Calculated_CRC_Label.configure(disabledforeground="#a3a3a3")
        self.Calculated_CRC_Label.configure(font=font19)
        self.Calculated_CRC_Label.configure(foreground="#000000")
        self.Calculated_CRC_Label.configure(
            text='''Calculated CRC-16/MODBUS''')

        self.Calculated_CRC_Display = ttk.Entry(
            self.Result_Area_Frame, textvariable=CRC_support.CRC_display_label)
        self.Calculated_CRC_Display.place(
            relx=0.243, rely=0.418, relheight=0.36, relwidth=0.49, bordermode='ignore')
        self.Calculated_CRC_Display.configure(font=font13)
        self.Calculated_CRC_Display.configure(justify='center')
        self.Calculated_CRC_Display.configure(takefocus="")
        self.Calculated_CRC_Display.configure(cursor="ibeam")


if __name__ == '__main__':
    vp_start_gui()
